---
AWSTemplateFormatVersion: "2010-09-09"
Description: Sample to show how to wrap Fortran executable with runtime

Parameters:
  SourcePackagesBucket:
    Default: source-packages
    Description: Name of stack that creates bucket for lambda packages
    Type: String
  TagServiceName:
    Default: moppa development
    Description: Name of service associated with this stack
    Type: String
  TagServiceCode:
    Default: ZZBGCS
    Description: Code for tracking resource usage by the associated service
    Type: String
  TagEnvironment:
    Default: dev
    Description: Type of project resource
    Type: String

Resources:
  SampleLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSLambdaExecute
      Tags:
      - Key: ServiceName
        Value: !Ref TagServiceName
      - Key: ServiceCode
        Value: !Ref TagServiceCode
      - Key: Environment
        Value: !Ref TagEnvironment
  SampleFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::ImportValue: !Sub "${TagEnvironment}-${SourcePackagesBucket}"
        S3Key: lambda-jules.zip
      Description: Run JULES
      FunctionName: jules
      Handler: index.handler
      MemorySize: 128
      Role: !GetAtt SampleLambdaExecutionRole.Arn
      Runtime: python3.7
      Timeout: 120
      Tags:
      - Key: ServiceName
        Value: !Ref TagServiceName
      - Key: ServiceCode
        Value: !Ref TagServiceCode
      - Key: Environment
        Value: !Ref TagEnvironment
#  ScheduleSampleFunction: 
#    Type: AWS::Events::Rule
#    Properties: 
#      Description: Sample Function Schedule
#      ScheduleExpression: cron(0/5 9-17 ? * MON-FRI *)
#      State: ENABLED
#      Targets:
#        - Arn: !GetAtt SampleFunction.Arn
#          Id: SampleFunction
#  ScheduleSampleFunctionPermission: 
#    Type: AWS::Lambda::Permission
#    Properties:
#      FunctionName: !Ref SampleFunction
#      Action: lambda:InvokeFunction
#      Principal: events.amazonaws.com
#      SourceArn: !GetAtt ScheduleSampleFunction.Arn
